import java.util.TreeMap;


public class ExpressionParser {
	
	private String e;
	private class Operators{
		
		public TreeMap<Integer, String> map;
		
		public Operators(){
			
			map = new TreeMap<Integer,String>(new Cresc<Integer>());
			map.put(1,"+");
			map.put(2,"-");
			map.put(3,"/");
			map.put(4,"*");
			map.put(5,"^");
			map.put(6,"log");
			map.put(6,"sin");
			map.put(6,"cos");
			map.put(6,"sqrt");
			map.put(6,"- ");
			map.put(7,"(");
		}
	}
	
	private int searchForCharacter(String s,char c){
		
		int nr=0;
		for(int i=0;i<s.length();i++){
			if(s.charAt(i)==c)
				nr++;
			}
		return nr;
	}
	
	public float eval(String expression) throws SyntacticException, EvaluatorException{
		// do the magic
		
		//verificarea numarului de paranteze
		e = expression;
		
		
		
		return 0f;
	}
	
}
